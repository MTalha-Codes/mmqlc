%YAML 1.2

file_extensions:
  - mmql
scope: source.example-mmql
contexts:
  main:
    # Comments begin with a '%%' and finish at the end of the line
    - match: '%%'
      scope: punctuation.definition.comment.example-mmql
      push: line_comment
    # Regular Real Double argumented Keywords/queries of mmql language
    - match: '\b(?:ADD|SUBTRACT|MULTIPLY|DIVIDE|PERMUTATION|COMBINATION|LOGARITHM|POWER|MOD|ROOT)\b\b'
      scope: keyword.real_double.example-mmql
    # Match Real Single Argumented Keywords\queries 
    - match: '\b(?:SINE|COSINE|TANGENT|COTANGENT|SECANT|COSECANT|INVERSE_TANGENT|INVERSE_COTANGENT|INVERSE_COSECANT|INVERSE_SECANT|INVERSE_COSINE|INVERSE_SINE|HYP_SINE|HYP_COSINE|HYP_TANGENT|HYP_COTANGENT|HYP_SECANT|HYP_COSECANT|INVERSE_HYP_SINE|INVERSE_HYP_SECANT|INVERSE_HYP_COSECANT|INVERSE_HYP_COTANGENT|INVERSE_HYP_COSINE|INVERSE_HYP_TANGENT|FACTORIAL|FLOOR|CEILING|ABSOLUTE|NATURAL_LOGARITHM|COMMON_LOGARITHM|BINARY_LOGARITHM|MODULUS)\b'
      scope: keyword.real_single.example-mmql
    # Match numbers whether complex or real
    - match: '\b(-?\d+(\.\d+)?([Ee][+-]\d+(\.\d+)?)?)|((-?\d+(\.\d+)?([Ee][+-]\d+(\.\d+)?)?)?(([-+]?\d+(\.\d+)?([Ee][+-]\d+(\.\d+)?)?)i))\b'
      scope: constant.numeric.example-mmql
  line_comment:
    - meta_scope: comment.line.example-mmql
    - match: $
      pop: true
